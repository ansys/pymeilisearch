name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'tools.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-tools-meilisearch'
  LIBRARY_NAMESPACE: 'ansys.tools.meilisearch'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: pyansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: pyansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: "Tests docker image"
    runs-on: ubuntu-latest
    needs: [code-style]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Start MeiliSearch container
        run: docker-compose up -d
      - name: Wait for container to start
        run: docker-compose ps -q meilisearch | xargs docker inspect --format='{{json .State.Health}}' | grep -q healthy
      - name: Stop MeiliSearch container
        run: docker-compose down

  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - uses: pyansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [doc-build]
    if: github.event_name == 'push'
    steps:
      - uses: pyansys/actions/doc-deploy-dev@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: [doc-deploy-dev]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: pyansys/actions/doc-deploy-stable@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build-library:
    name: "Build library basic example"
    runs-on: ubuntu-latest
    needs: [tests, doc-build]
    steps:
      - uses: pyansys/actions/build-library@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}